;====================================================================
; subroutine UDIV16
; 16-Bit / 16-Bit to 16-Bit Quotient & Remainder Unsigned Divide
;
; J:I = J:I / B:A
;
; input: r1, r0 = Dividend X 	J:I
; r3, r2 = Divisor Y			B:A
;
; output: r1, r0 = quotient Q of division Q = X / Y			J:I
; r3, r2 = remainder 										B;A
;
; alters: acc, B, dpl, dph, r4, r5, r6, r7, flags
;              12
;====================================================================

LIB_DIV16:
    LIQ 0
    LP 10
    LII 7
    MVW
    PUSH			; BACKUP the Acc
    RA
    LP 17			; mov r7, #0 ; clear partial remainder
    EXAM
    LP 16
    RA
    EXAM			; mov r6, #0
    LIB 16			;mov B, #16 ; set loop count

div_loop:
    RC				; clr C ; clear carry flag
    LP 10
    PUSH
    EXAM			; mov a, r0 ; shift the highest bit of
    POP
    SL				; rlc a ; the dividend into...
    LP 10
    PUSH
    EXAM			; mov10, a
    LP 11
    LDM				; mov a, r1
    SR				; rlc a
    LP 11
    PUSH
    EXAM
    POP				; mov r1, a
    LP 16
    LDM				; mov a, r6 ; ... the lowest bit of the
    SR				; rlc a ; partial remainder
    LP 16
    PUSH
    EXAM
    POP				; mov r6, a
    LP 17
    LDM				; mov a, r7
    SR				; rlc a
    LP 17
    PUSH
    EXAM
    POP				; mov 17, a
    LP 16
    LDM				; mov a, r6 ; trial subtract divisor
    RC				; clr C ; from partial remainder
    LP 12
    EXAM
    SBCM
    EXAM			; subb a, r2
    LP 4
    PUSH
    EXAM
    POP				; mov dpl, a
    LP 17
    LDM				; mov a, r7
    LP 13
    EXAM
    SBCM
    EXAM			; subb a, r3
    LP 5
    PUSH
    EXAM
    POP				; mov dph, a
    JRCP clearC
    SC
    JRP suite
clearC:
    RC
suite:				; cpl C ; complement external borrow
    JRNCP div_1		; jnc div_1 ; update partial remainder if
; borrow
    PUSH
    LP 5
    LDM
    LP 17
    EXAM
    POP				; mov r7, dph ; update partial remainder
    LP 4
    LDM
    LP 16
    EXAM
    POP				; mov r6, dpl
div_1:
    LP 14
    LDM				; mov a, r4 ; shift result bit into partial
    SL				; rlc a ; quotient
    Lp 14
    PUSH
    EXAM
    POP				; mov r4, a
    LP 15
    LDM				; mov a, r5
    SR				; rlc a
    Lp15
    PUSH
    EXAM
    POP				; mov r5, a
    DECB
    JPNZ div_loop	; djnz B, div_loop
    LP 15
    LDM				; mov a, r5 ; put quotient in r0, and r1
    LP 11
    PUSH
    EXAM
    POP				; mov r1, a
    LP 14
    LDM				; mov a, r4
    Lp10
    PUSH
    EXAM
    POP				; mov r0, a
    LP 17
    LDM				; mov a, r7 ; get remainder, saved before the
    LP 13
    PUSH
    EXAM
    POP				; mov r3, a ; last subtraction
    LP 16
    LDM				; mov a, r6
    LP 12
    PUSH
    EXAM
    POP				; mov r2, a
    LIQ 10
    LP 0
    LII 7
    MVW
RTN
